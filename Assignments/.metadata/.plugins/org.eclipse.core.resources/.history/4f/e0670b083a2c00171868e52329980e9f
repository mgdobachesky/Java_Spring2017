/**
 * 
 * @author mike91doby
 *
 */
public class Ledger {
	// Define the number of sales
	final static int NUMBER_OF_SALES = 10;

	// Class properties
	private double[] sale;
	private int salesMade;
	private int maxSales;
	
	// Class constructors
	public Ledger() {
		sale = new double[NUMBER_OF_SALES];
		salesMade = 0;
		maxSales = 0;
	}
	
	public Ledger(int max) throws IndexOutOfBoundsException {
		this();
		if(max > NUMBER_OF_SALES) {
			throw new IndexOutOfBoundsException();
		}
		setMaxSales(max);
	}
	
	// Class setters
	private void setMaxSales(int max) {
		this.maxSales = max;
	}
	
	
	// Class getters
	public int getNumberOfSales() {
		return this.salesMade;
	}
	
	public int getMaxSales() {
		return this.maxSales;
	}
	
	
	// Class methods
	private void incrementSales() {
		salesMade++;
	}
	
	public void addSale(int d) throws IndexOutOfBoundsException {
		if(salesMade >= maxSales) {
			throw new IndexOutOfBoundsException();
		}
		this.sale[this.getNumberOfSales() - 1] = d;
		incrementSales();
	}
	
	public int getTotalSales() throws ArithmeticException {
		if(this.getNumberOfSales() == 0) {
			throw new ArithmeticException();
		}
		int total = 0;
		for(int i = 0; i < this.getMaxSales(); i++) {
			total += this.sale[i];
		}
		return total;
	}
	
	public float getAverageSale() throws ArithmeticException {
		if(this.salesMade == 0) {
			throw new ArithmeticException();
		}
		return ((float)getTotalSales() / this.salesMade);
	}
	
	public int getCountAbove(int target) throws ArithmeticException {
		if(this.salesMade < target) {
			throw new ArithmeticException();
		}
		return (this.salesMade - target);
	}
	
}
